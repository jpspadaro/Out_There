[gd_resource type="ShaderMaterial" load_steps=16 format=2]

[ext_resource path="res://Assets/Images/Textures/concrete_floor_01_2k_jpg/concrete_floor_01_disp_2k.jpg" type="Texture" id=1]
[ext_resource path="res://Assets/Images/Textures/concrete_floor_01_2k_jpg/concrete_floor_01_rough_2k.jpg" type="Texture" id=2]
[ext_resource path="res://Assets/Images/Textures/concrete_floor_01_2k_jpg/concrete_floor_01_spec_2k.jpg" type="Texture" id=3]
[ext_resource path="res://Assets/Images/Textures/concrete_floor_01_2k_jpg/concrete_floor_01_bump_2k.jpg" type="Texture" id=4]
[ext_resource path="res://Assets/Images/Textures/concrete_floor_01_2k_jpg/concrete_floor_01_nor_2k.jpg" type="Texture" id=5]
[ext_resource path="res://Assets/Images/Textures/concrete_floor_01_2k_jpg/concrete_floor_01_ao_2k.jpg" type="Texture" id=6]
[ext_resource path="res://Assets/Images/Textures/concrete.jpg" type="Texture" id=7]

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 7 )

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 6 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 5 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 1 )

[sub_resource type="VisualShader" id=7]
code = "shader_type spatial;
render_mode depth_draw_always, cull_disabled, diffuse_burley, specular_phong;

uniform sampler2D tex_frg_10;
uniform sampler2D tex_frg_6 : hint_albedo;
uniform sampler2D tex_frg_7;
uniform sampler2D tex_frg_5 : hint_albedo;
uniform sampler2D tex_frg_2 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, UV.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out10p0;
	ROUGHNESS = dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333));
	SPECULAR = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333));
	NORMAL = n_out5p0;
	SSS_STRENGTH = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -32.07, 10.29 )
modes/cull = 2
modes/depth_draw = 1
modes/diffuse = 3
modes/specular = 2
nodes/fragment/0/position = Vector2( 940, 100 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 660, 440 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 140, 200 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 360, 220 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 600, 240 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 360, 0 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( 20, 20 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( 580, 20 )
nodes/fragment/connections = PoolIntArray( 7, 0, 0, 4, 6, 0, 0, 3, 5, 0, 0, 7, 2, 0, 0, 16, 10, 0, 0, 0 )

[resource]
shader = SubResource( 7 )
